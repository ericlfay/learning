ansible -u 指定用户 -i 指定主机  -m 指定模块(执行具体操作) -a 指定参数 -k 远程主机密码
ansible -u root -i /etc/ansible/hosts test  -m command -a 'ls /home' -k 

ansible -u root -i hosts test  -m command -a 'ls /etc/' -k kAgpl9JSQhRK kAgpl9JSQhRK

#############################################################################################################################################
设置本地ssh key到指定主机 
ansible -u root -i hosts test  -m authorized_key -a "user=root key='{{ lookup('file','~/.ssh/id_rsa.pub') }}'" -k 

测试ssh key 设置是否成功
ansible -i hosts test -u root -m ping

查看ansible 所有模块
ansible-doc -l     -s 查看所有参数

#############################################################################################################################################

ansible -u root -i hosts test -m \ 

setup 收集客户端的所有参数

ping  测试是否联通

file 设置文件属性

    force：需要在两种情况下强制创建软链接，一种是源文件不存在但之后会建立的情况下；另一种是目标软链接已存在,需要先取消之前的软链，然后创建新的软链，有两个选项：yes|no 
    group：定义文件/目录的属组 
    mode：定义文件/目录的权限
    owner：定义文件/目录的属主
    path：必选项，定义文件/目录的路径
    recurse：递归的设置文件的属性，只对目录有效
    src：要被链接的源文件的路径，只应用于state=link的情况
    dest：被链接到的路径，只应用于state=link的情况 
    state：  
        directory：如果目录不存在，创建目录
        file：即使文件不存在，也不会被创建
        link：创建软链接
        hard：创建硬链接
        touch：如果文件不存在，则会创建一个新的文件，如果文件或目录已存在，则更新其最后修改时间
        absent：删除目录、文件或者取消链接文件


    eg.    ansible  -u root -i hosts test  -m file -a "src=/etc/fstab dest=/tmp/fstab state=link"

copy 复制文件到远程主机

    backup：在覆盖之前将原文件备份，备份文件包含时间信息。有两个选项：yes|no 
    content：用于替代"src",可以直接设定指定文件的值 
    dest：必选项。要将源文件复制到的远程主机的绝对路径，如果源文件是一个目录，那么该路径也必须是个目录 
    directory_mode：递归的设定目录的权限，默认为系统默认权限
    force：如果目标主机包含该文件，但内容不同，如果设置为yes，则强制覆盖，如果为no，则只有当目标主机的目标位置不存在该文件时，才复制。默认为yes
    others：所有的file模块里的选项都可以在这里使用
    src：要复制到远程主机的文件在本地的地址，可以是绝对路径，也可以是相对路径。如果路径是一个目录，它将递归复制。在这种情况下，如果路径使用"/"来结尾，则只复制目录里的内容，如果没有使用"/"来结尾，则包含目录在内的整个内容全部复制，类似于rsync。 
    validate ：The validation command to run before copying into place. The path to the file to validate is passed in via '%s' which must be present as in the visudo example below.

    eg. ansible  -u root -i hosts test  -m copy -a "src=/srv/myfiles/foo.conf dest=/etc/foo.conf owner=foo group=foo mode=0644"

service 管理服务

    arguments：给命令行提供一些选项 
    enabled：是否开机启动 yes|no
    name：必选项，服务名称 
    pattern：定义一个模式，如果通过status指令来查看服务的状态时，没有响应，就会通过ps指令在进程中根据该模式进行查找，如果匹配到，则认为该服务依然在运行
    runlevel：运行级别
    sleep：如果执行了restarted，在则stop和start之间沉睡几秒钟
    state：对当前服务执行启动，停止、重启、重新加载等操作（started,stopped,restarted,reloaded）
    
    eg. ansible test -m service -a "name=httpd state=started enabled=yes"

cron 管理计划任务

    backup：对远程主机上的原任务计划内容修改之前做备份 
    cron_file：如果指定该选项，则用该文件替换远程主机上的cron.d目录下的用户的任务计划 
    day：日（1-31，*，*/2,……） 
    hour：小时（0-23，*，*/2，……）  
    minute：分钟（0-59，*，*/2，……） 
    month：月（1-12，*，*/2，……） 
    weekday：周（0-7，*，……）
    job：要执行的任务，依赖于state=present 
    name：该任务的描述 
    special_time：指定什么时候执行，参数：reboot,yearly,annually,monthly,weekly,daily,hourly 
    state：确认该任务计划是创建还是删除 
    user：以哪个用户的身份执行

    eg. ansible test -m cron -a 'name="a job for reboot" special_time=reboot job="/some/job.sh"'

yum 包管理器来管理软件包

    config_file：yum的配置文件 
    disable_gpg_check：关闭gpg_check 
    disablerepo：不启用某个源 
    enablerepo：启用某个源
    name：要进行操作的软件包的名字，也可以传递一个url或者一个本地的rpm包的路径 
    state：状态（present，absent，latest）

    eg.  ansible test -m yum -a 'name=httpd state=latest'

#############################################################################################################################################

playbooks 构成

-hosts:test 主机组
user:root  用户
vars:  变量值
    -modename:'test1'
tasks: 任务
    -name:copy a mode
    -copy:src=/srv/myfiles/foo.conf dest=/etc/foo.conf
    notify:say sometings
handlers: 执行完成后调用值
    -name:say someting
     command:echo"copy ok"



target secions

hosts 定义主机组
user 执行该任务组用户
remote_user 与user相同
sudo yes 则执行任务时使用root权限
sudo_user 设置时获取的root权限的对象
connection 使用链接主机方式 默认为ssh
strategy 参数，可以指定为 linear | serial | free，提供了不同的运行策略。
gather_facts: 选择不执行setup模块


veriable section

vars 变量定义
vars_files 变量文件
vars_prompt 输入变量值

vars_files
    -filename  文件

vars_prompt
    - name:var_name 名称
      prompt:say somethings   提示语句
      private:no   no 在屏幕中显示 yes 不显示

执行方法 
ansible-playbook test.yml

setup 回调变量可以直接使用






















